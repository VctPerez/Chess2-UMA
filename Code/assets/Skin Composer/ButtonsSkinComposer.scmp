{
atlasData: {
	atlasCurrent: true
	drawables: [
		{
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/sprites/textField/TextField_SELECTED.9.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: TextField_SELECTED
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: NINE_PATCH
			hidden: false
		}
		{
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/sprites/textField/TextField_UNSELECTED.9.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: TextField_UNSELECTED
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: NINE_PATCH
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 0
				g: 0
				b: 0
				a: 1
			}
			tint: null
			tintName: CURSOR_COLOR
			name: CURSOR_SELECTION_PIXEL
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
	]
	fontDrawables: [
		{
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/fonts/TextField_FONT.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: TextField_FONT
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: FONT
			hidden: false
		}
		{
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/fonts/TextButtons_FONT_0.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: TextButtons_FONT_0
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: FONT
			hidden: false
		}
		{
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/fonts/TextButtons_FONT_1.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: TextButtons_FONT_1
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: FONT
			hidden: false
		}
	]
}
jsonData: {
	colors: [
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.6313726
				g: 0.90588236
				b: 0.92156863
				a: 1
			}
			name: CURSOR_COLOR
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.007843138
				g: 0.078431375
				b: 0.8627451
				a: 1
			}
			name: DOWN_COLOR
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.7607843
				g: 0.7607843
				b: 0.7607843
				a: 1
			}
			name: OVER_FONT_COLOR
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0
				g: 0
				b: 0
				a: 1
			}
			name: TEXT_BORDER_COLOR
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			name: TEXT_COLOR
		}
	]
	fonts: [
		{
			class: com.ray3k.skincomposer.data.FontData
			name: TextButtons_FONT
			flip: false
			markupEnabled: false
			scaling: -1
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/fonts/TextButtons_FONT.fnt
		}
		{
			class: com.ray3k.skincomposer.data.FontData
			name: TextField_FONT
			flip: false
			markupEnabled: false
			scaling: -1
			file: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/fonts/TextField_FONT.fnt
		}
	]
	freeTypeFonts: []
	classStyleMap: {
		com.badlogic.gdx.scenes.scene2d.ui.Button: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Button
				properties: {
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.CheckBox: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.CheckBox
				properties: {
					checkboxOn: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOn
						optional: false
						value: null
					}
					checkboxOff: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOff
						optional: false
						value: null
					}
					checkboxOnOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOnOver
						optional: true
						value: null
					}
					checkboxOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOver
						optional: true
						value: null
					}
					checkboxOnDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOnDisabled
						optional: true
						value: null
					}
					checkboxOffDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOffDisabled
						optional: true
						value: null
					}
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ImageButton: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ImageButton
				properties: {
					imageUp: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageUp
						optional: true
						value: null
					}
					imageDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDown
						optional: true
						value: null
					}
					imageOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageOver
						optional: true
						value: null
					}
					imageDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDisabled
						optional: true
						value: null
					}
					imageChecked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageChecked
						optional: true
						value: null
					}
					imageCheckedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageCheckedDown
						optional: true
						value: null
					}
					imageCheckedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageCheckedOver
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
				properties: {
					imageUp: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageUp
						optional: true
						value: null
					}
					imageDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDown
						optional: true
						value: null
					}
					imageOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageOver
						optional: true
						value: null
					}
					imageDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDisabled
						optional: true
						value: null
					}
					imageChecked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageChecked
						optional: true
						value: null
					}
					imageCheckedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageCheckedDown
						optional: true
						value: null
					}
					imageCheckedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageCheckedOver
						optional: true
						value: null
					}
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Label: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.List: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.List
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColorSelected: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColorSelected
						optional: false
						value: null
					}
					fontColorUnselected: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColorUnselected
						optional: false
						value: null
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: false
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-horizontal
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-vertical
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					corner: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: corner
						optional: true
						value: null
					}
					hScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScroll
						optional: true
						value: null
					}
					hScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScrollKnob
						optional: true
						value: null
					}
					vScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScroll
						optional: true
						value: null
					}
					vScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScrollKnob
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.SelectBox: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.SelectBox
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: false
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					scrollStyle: {
						type: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
						name: scrollStyle
						optional: false
						value: default
					}
					listStyle: {
						type: com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
						name: listStyle
						optional: false
						value: default
					}
					backgroundOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundOver
						optional: true
						value: null
					}
					backgroundOpen: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundOpen
						optional: true
						value: null
					}
					backgroundDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundDisabled
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Slider: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-horizontal
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Slider
				properties: {
					backgroundOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundOver
						optional: true
						value: null
					}
					backgroundDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundDown
						optional: true
						value: null
					}
					knobOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobOver
						optional: true
						value: null
					}
					knobDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobDown
						optional: true
						value: null
					}
					knobBeforeOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBeforeOver
						optional: true
						value: null
					}
					knobBeforeDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBeforeDown
						optional: true
						value: null
					}
					knobAfterOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfterOver
						optional: true
						value: null
					}
					knobAfterDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfterDown
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-vertical
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Slider
				properties: {
					backgroundOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundOver
						optional: true
						value: null
					}
					backgroundDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundDown
						optional: true
						value: null
					}
					knobOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobOver
						optional: true
						value: null
					}
					knobDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobDown
						optional: true
						value: null
					}
					knobBeforeOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBeforeOver
						optional: true
						value: null
					}
					knobBeforeDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBeforeDown
						optional: true
						value: null
					}
					knobAfterOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfterOver
						optional: true
						value: null
					}
					knobAfterDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfterDown
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.SplitPane: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-horizontal
				clazz: com.badlogic.gdx.scenes.scene2d.ui.SplitPane
				properties: {
					handle: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: handle
						optional: false
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-vertical
				clazz: com.badlogic.gdx.scenes.scene2d.ui.SplitPane
				properties: {
					handle: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: handle
						optional: false
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.TextButton: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: TextButtons_FONT
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: TEXT_COLOR
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: DOWN_COLOR
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: OVER_FONT_COLOR
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: DOWN_COLOR
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.TextField: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextField
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: TextField_FONT
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: false
						value: TEXT_COLOR
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: TextField_UNSELECTED
					}
					focusedBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focusedBackground
						optional: true
						value: TextField_SELECTED
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					cursor: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: cursor
						optional: true
						value: CURSOR_SELECTION_PIXEL
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: true
						value: CURSOR_SELECTION_PIXEL
					}
					messageFont: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: messageFont
						optional: true
						value: null
					}
					messageFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: messageFontColor
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.TextTooltip: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextTooltip
				properties: {
					label: {
						type: com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
						name: label
						optional: false
						value: default
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					wrapWidth: {
						type: float
						name: wrapWidth
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Touchpad: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Touchpad
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Tree: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Tree
				properties: {
					plus: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: plus
						optional: false
						value: null
					}
					minus: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: minus
						optional: false
						value: null
					}
					plusOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: plusOver
						optional: true
						value: null
					}
					minusOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: minusOver
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Window: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Window
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					titleFont: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: titleFont
						optional: false
						value: null
					}
					titleFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: titleFontColor
						optional: true
						value: null
					}
					stageBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: stageBackground
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
	}
	customClasses: []
}
preferences: {
	export-fonts: {
		class: java.lang.Boolean
		value: false
	}
	id: {
		class: java.lang.Integer
		value: 205366201
	}
	last-import-export-path: {
		class: java.lang.String
		value: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/Skin Composer/UIStyle.json
	}
	resources-relative: {
		class: java.lang.Boolean
		value: false
	}
	maxUndos: {
		class: java.lang.Integer
		value: 30
	}
}
saveFile: C:/Users/adrid/Documents/GitHub/Chess2-UMA/Code/assets/Skin Composer/ButtonsSkinComposer.scmp
version: 56
sceneComposer: null
}